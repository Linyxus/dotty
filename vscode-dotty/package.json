{
  "name": "dotty",
  "displayName": "Dotty Language Server",
  "description": "IDE integration for Dotty, the experimental Scala compiler",
  "version": "0.1.4",
  "license": "BSD-3-Clause",
  "publisher": "lampepfl",
  "repository": {
    "type": "git",
    "url": "https://github.com/lampepfl/dotty.git"
  },
  "icon": "images/dotty-logo.png",
  "engines": {
    "vscode": "^1.22.0"
  },
  "categories": [
    "Languages",
    "Debuggers"
  ],
  "keywords": [
    "scala",
    "dotty",
    "jvm",
    "language-server"
  ],
  "main": "./out/src/extension",
  "activationEvents": [
    "workspaceContains:.dotty-ide.json",
    "onCommand:dotty.execute.workspaceCommand",
    "onDebugInitialConfigurations",
    "onDebugResolve:dotty",
    "onCommand:DottyDebug.SpecifyProgramArgs"
  ],
  "languages": [
    {
      "id": "scala",
      "extensions": [
        ".scala"
      ],
      "aliases": [
        "Scala"
      ]
    }
  ],
  "contributes": {
    "configurationDefaults": {
      "[scala]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true
      }
    },
    "breakpoints": [
      {
        "language": "scala"
      }
    ],
    "debuggers": [
      {
        "type": "dotty",
        "label": "Dotty",
        "variables": {
          "SpecifyProgramArgs": "DottyDebug.SpecifyProgramArgs"
        },
        "configurationAttributes": {
          "launch": {
            "required": [
              "mainClass"
            ],
            "properties": {
              "projectName": {
                "type": "string",
                "description": "The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects. This setting also works when the debugger looks for the specified main class when launching a program. It is required for expression evaluation.",
                "default": ""
              },
              "mainClass": {
                "type": "string",
                "description": "The main class of the program (fully qualified name, e.g. [mymodule/]com.xyz.MainClass).",
                "default": ""
              },
              "args": {
                "type": "string",
                "description": "The command line arguments passed to the program.",
                "default": ""
              },
              "vmArgs": {
                "type": "string",
                "description": "The extra options and system properties for the JVM (e.g. -Xms<size> -Xmx<size> -D<name>=<value>).",
                "default": ""
              },
              "modulePaths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The modulepaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.",
                "default": []
              },
              "classPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The classpaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.",
                "default": []
              },
              "sourcePaths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories.",
                "default": []
              },
              "encoding": {
                "type": "string",
                "description": "The file.encoding setting for the JVM. If not specified, 'UTF-8' will be used. Possible values can be found in http://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html.",
                "default": "UTF-8"
              },
              "cwd": {
                "type": "string",
                "description": "The working directory of the program.",
                "default": "${workspaceFolder}"
              },
              "env": {
                "type": "object",
                "description": "The extra environment variables for the program.",
                "default": {}
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically pause the program after launching.",
                "default": true
              },
              "console": {
                "type": "string",
                "enum": [
                  "internalConsole",
                  "integratedTerminal",
                  "externalTerminal"
                ],
                "enumDescriptions": [
                  "VS Code debug console (input stream not supported).",
                  "VS Code integrated terminal.",
                  "External terminal that can be configured in user settings."
                ],
                "description": "The specified console to launch the program.",
                "default": "internalConsole"
              },
              "stepFilters": {
                "type": "object",
                "description": "Skip specified classes or methods when stepping.",
                "default": {
                  "classNameFilters": [
                    "java.*",
                    "javax.*",
                    "com.sun.*",
                    "sun.*",
                    "sunw.*",
                    "org.omg.*"
                  ],
                  "skipSynthetics": false,
                  "skipStaticInitializers": false,
                  "skipConstructors": false
                },
                "properties": {
                  "classNameFilters": {
                    "type": "array",
                    "description": "Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.",
                    "item": {
                      "type": "string"
                    },
                    "default": [
                      "java.*",
                      "javax.*",
                      "com.sun.*",
                      "sun.*",
                      "sunw.*",
                      "org.omg.*"
                    ]
                  },
                  "skipSynthetics": {
                    "type": "boolean",
                    "description": "Skip synthetic methods when stepping.",
                    "default": true
                  },
                  "skipStaticInitializers": {
                    "type": "boolean",
                    "description": "Skip static initializer methods when stepping.",
                    "default": true
                  },
                  "skipConstructors": {
                    "type": "boolean",
                    "description": "Skip constructor methods when stepping.",
                    "default": true
                  }
                }
              }
            }
          },
          "attach": {
            "required": [
              "hostName",
              "port"
            ],
            "properties": {
              "hostName": {
                "type": "string",
                "default": "localhost",
                "description": "The host name or ip address of remote debuggee."
              },
              "port": {
                "type": "number",
                "description": "The debug port of remote debuggee."
              },
              "timeout": {
                "type": "number",
                "default": 30000,
                "description": "Timeout value before reconnecting, in milliseconds (default to 30000ms)."
              },
              "sourcePaths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": [],
                "description": "The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories."
              },
              "projectName": {
                "type": "string",
                "description": "The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects.",
                "default": ""
              },
              "stepFilters": {
                "type": "object",
                "description": "Skip specified classes or methods when stepping.",
                "default": {
                  "classNameFilters": [
                    "java.*",
                    "javax.*",
                    "com.sun.*",
                    "sun.*",
                    "sunw.*",
                    "org.omg.*"
                  ],
                  "skipSynthetics": false,
                  "skipStaticInitializers": false,
                  "skipConstructors": false
                },
                "properties": {
                  "classNameFilters": {
                    "type": "array",
                    "description": "Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.",
                    "item": {
                      "type": "string"
                    },
                    "default": [
                      "java.*",
                      "javax.*",
                      "com.sun.*",
                      "sun.*",
                      "sunw.*",
                      "org.omg.*"
                    ]
                  },
                  "skipSynthetics": {
                    "type": "boolean",
                    "description": "Skip synthetic methods when stepping.",
                    "default": false
                  },
                  "skipStaticInitializers": {
                    "type": "boolean",
                    "description": "Skip static initializer methods when stepping.",
                    "default": false
                  },
                  "skipConstructors": {
                    "type": "boolean",
                    "description": "Skip constructor methods when stepping.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "configurationSnippets": [
          {
            "label": "Dotty: Launch Program",
            "description": "Add a new configuration for launching a program compiled with Dotty.",
            "body": {
              "type": "dotty",
              "name": "Debug (Launch)",
              "request": "launch",
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "internalConsole",
              "stopOnEntry": false,
              "mainClass": "",
              "args": ""
            }
          },
          {
            "label": "Dotty: Launch Program with Arguments Prompt",
            "description": "Add a new configuration for launching a program compiled with Dotty with arguments prompt.",
            "body": {
              "type": "dotty",
              "name": "Debug (Launch) with Arguments Prompt",
              "request": "launch",
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "internalConsole",
              "stopOnEntry": false,
              "mainClass": "",
              "args": "^\"\\${command:SpecifyProgramArgs}\""
            }
          },
          {
            "label": "Java: Attach to Remote Program",
            "description": "Add a new configuration for attaching to a running program compiled with Dotty.",
            "body": {
              "type": "dotty",
              "name": "Debug (Attach)",
              "request": "attach",
              "hostName": "localhost",
              "port": 0
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "tsc": "./node_modules/.bin/tsc",
    "vscode:prepublish": "npm install && ./node_modules/.bin/tsc -p ./",
    "compile": "./node_modules/.bin/tsc -p ./",
    "test": "node ./node_modules/vscode/bin/test",
    "postinstall": "node ./node_modules/vscode/bin/install && curl -L -o out/coursier https://github.com/coursier/coursier/raw/v1.0.0/coursier"
  },
  "extensionDependencies": [
    "daltonjorge.scala"
  ],
  "dependencies": {
    "child-process-promise": "^2.2.1",
    "vscode-languageclient": "^3.5.1",
    "vscode-languageserver": "^3.5.1"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.0",
    "@types/node": "^8.10.9",
    "typescript": "^2.8.3",
    "vscode": "^1.1.14"
  }
}
