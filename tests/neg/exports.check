-- Error: tests/neg/exports.scala:21:20 --------------------------------------------------------------------------------
21 |    export scanUnit.scanIt          // error: no eligible member
   |                    ^^^^^^
   |                    no eligible member scanIt at this.scanUnit
-- Error: tests/neg/exports.scala:22:29 --------------------------------------------------------------------------------
22 |    export scanUnit.{scanAll => foo} // error: no eligible member
   |                     ^^^^^^^^^^^^^^
   |                     no eligible member scanAll at this.scanUnit
   |                     this.scanUnit.scanAll cannot be exported because it is not accessible
-- Error: tests/neg/exports.scala:25:21 --------------------------------------------------------------------------------
25 |    export printUnit.bitmap         // error: no eligible member
   |                     ^
   |                     non-private method bitmap in class Copier refers to private value printUnit
   |                     in its type signature => Copier.this.printUnit.bitmap$
-- [E120] Naming Error: tests/neg/exports.scala:23:33 ------------------------------------------------------------------
23 |    export printUnit.{stat => _, _} // error: double definition
   |                                 ^
   |                                 Double definition:
   |                                 def status: => List[String] in class Copier at line 28 and
   |                                 final def status: => List[String] in class Copier at line 23
   |                                 have the same type after erasure.
-- [E120] Naming Error: tests/neg/exports.scala:24:20 ------------------------------------------------------------------
24 |    export scanUnit._               // error: double definition
   |                    ^
   |                    Double definition:
   |                    final def status: => List[String] in class Copier at line 23 and
   |                    final def status: => List[String] in class Copier at line 24
   |                    have the same type after erasure.
-- [E120] Naming Error: tests/neg/exports.scala:26:21 ------------------------------------------------------------------
26 |    export printUnit.status         // error: double definition
   |                     ^
   |                     Double definition:
   |                     final def status: => List[String] in class Copier at line 24 and
   |                     final def status: => List[String] in class Copier at line 26
   |                     have the same type after erasure.
-- [E120] Naming Error: tests/neg/exports.scala:42:24 ------------------------------------------------------------------
42 |    export this.{addAll => alias} // error: double definition
   |                        ^
   |                        Double definition:
   |                        def alias(ints: Int*): (Buf.this : Buf) in class Buf at line 41 and
   |                        final def alias(ints: Int*): (Buf.this : Buf) in class Buf at line 42
   |                        have the same type after erasure.
-- Error: tests/neg/exports.scala:47:15 --------------------------------------------------------------------------------
47 |    export foo.foo // error: no eligible member
   |               ^^^
   |               no eligible member foo at this.foo
   |               this.foo.foo cannot be exported because it is already a member of class Foo
-- [E120] Naming Error: tests/neg/exports.scala:52:15 ------------------------------------------------------------------
52 |    export bar._  // error: double definition
   |               ^
   |               Double definition:
   |               val bar: Bar in class Baz at line 51 and
   |               final def bar: => (Baz.this.bar.bar : => (Baz.this.bar.baz.bar : Bar)) in class Baz at line 52
