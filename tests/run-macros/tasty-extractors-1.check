Inlined(EmptyTree(), Nil, Literal(Constant.Boolean(true)))
ConstantType(Constant.Boolean(true))

Inlined(EmptyTree(), Nil, Literal(Constant.Int(1)))
ConstantType(Constant.Int(1))

Inlined(EmptyTree(), Nil, Literal(Constant.Long(2L)))
ConstantType(Constant.Long(2L))

Inlined(EmptyTree(), Nil, Literal(Constant.Float(2.1f)))
ConstantType(Constant.Float(2.1f))

Inlined(EmptyTree(), Nil, Literal(Constant.Double(2.2d)))
ConstantType(Constant.Double(2.2d))

Inlined(EmptyTree(), Nil, Literal(Constant.String("abc")))
ConstantType(Constant.String("abc"))

Inlined(EmptyTree(), Nil, Apply(Ident("println"), List(Literal(Constant.String("abc")))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Typed(Literal(Constant.Int(8)), TypeIdent("Int")))
TypeRef(TermRef(ThisType(TypeRef(NoPrefix(), "<root>")), "scala"), "Int")

Inlined(EmptyTree(), Nil, Typed(Literal(Constant.Byte(8)), TypeIdent("Byte")))
TypeRef(TermRef(ThisType(TypeRef(NoPrefix(), "<root>")), "scala"), "Byte")

Inlined(EmptyTree(), Nil, Typed(Literal(Constant.Short(8)), TypeIdent("Short")))
TypeRef(TermRef(ThisType(TypeRef(NoPrefix(), "<root>")), "scala"), "Short")

Inlined(EmptyTree(), Nil, Literal(Constant.Char('a')))
ConstantType(Constant.Char('a'))

Inlined(EmptyTree(), Nil, Block(List(Literal(Constant.Int(1)), Literal(Constant.Int(2))), Literal(Constant.Int(3))))
ConstantType(Constant.Int(3))

Inlined(EmptyTree(), Nil, If(Typed(Literal(Constant.Boolean(true)), TypeIdent("Boolean")), Literal(Constant.Int(1)), Literal(Constant.Int(2))))
OrType(ConstantType(Constant.Int(1)), ConstantType(Constant.Int(2)))

Inlined(EmptyTree(), Nil, Match(Literal(Constant.String("a")), List(CaseDef(Literal(Constant.String("a")), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Literal(Constant.String("b")), List(CaseDef(Bind("n", Ident("_")), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Literal(Constant.String("c")), List(CaseDef(Bind("n", Typed(Ident("_"), TypeIdent("String"))), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Literal(Constant.String("e")), List(CaseDef(Ident("_"), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Literal(Constant.String("f")), List(CaseDef(Typed(Ident("_"), TypeIdent("String")), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Typed(Literal(Constant.String("g")), TypeIdent("Any")), List(CaseDef(Alternative(List(Typed(Ident("_"), TypeIdent("String")), Typed(Ident("_"), TypeIdent("Int")))), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Literal(Constant.String("h")), List(CaseDef(Ident("_"), Literal(Constant.Boolean(false)), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(ValDef("a", Inferred(), Literal(Constant.String("o")))), Match(Literal(Constant.String("i")), List(CaseDef(Bind("a", Ident("_")), EmptyTree(), Block(Nil, Literal(Constant.Unit())))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Match(Ident("Nil"), List(CaseDef(Unapply(TypeApply(Select(Ident("List"), "unapplySeq"), List(Inferred())), Nil, List(Bind("a", Ident("_")), Bind("b", Ident("_")), Bind("c", Ident("_")))), EmptyTree(), Block(Nil, Literal(Constant.Unit()))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Try(Literal(Constant.Int(1)), List(CaseDef(Ident("_"), EmptyTree(), Block(Nil, Literal(Constant.Unit())))), EmptyTree()))
OrType(ConstantType(Constant.Int(1)), TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit"))

Inlined(EmptyTree(), Nil, Try(Literal(Constant.Int(2)), Nil, Literal(Constant.Unit())))
ConstantType(Constant.Int(2))

Inlined(EmptyTree(), Nil, Try(Literal(Constant.Int(3)), List(CaseDef(Ident("_"), EmptyTree(), Block(Nil, Literal(Constant.Unit())))), Literal(Constant.Unit())))
OrType(ConstantType(Constant.Int(3)), TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit"))

Inlined(EmptyTree(), Nil, Apply(Select(Literal(Constant.String("a")), "=="), List(Literal(Constant.String("b")))))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Boolean")

Inlined(EmptyTree(), Nil, Apply(Select(New(TypeIdent("Object")), "<init>"), Nil))
TypeRef(ThisType(TypeRef(NoPrefix(), "lang")), "Object")

Inlined(EmptyTree(), Nil, Apply(Select(Ident("Int"), "box"), List(NamedArg("x", Literal(Constant.Int(9))))))
TypeRef(ThisType(TypeRef(NoPrefix(), "lang")), "Integer")

Inlined(EmptyTree(), Nil, Apply(TypeApply(Select(Ident("Ordering"), "apply"), List(TypeIdent("Int"))), List(Ident("Int"))))
AppliedType(TypeRef(ThisType(TypeRef(NoPrefix(), "math")), "Ordering"), List(TypeRef(TermRef(ThisType(TypeRef(NoPrefix(), "<root>")), "scala"), "Int")))

Inlined(EmptyTree(), Nil, Block(List(ValDef("a", TypeIdent("Int"), Literal(Constant.Int(3)))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(ValDef("b", TypeIdent("Int"), Literal(Constant.Int(3)))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f1", Nil, Nil, TypeIdent("Int"), Literal(Constant.Int(3)))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f2", Nil, Nil, TypeIdent("Int"), Return(Literal(Constant.Int(4)), IsDefDefSymbol(<Test$._$_$f2>)))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f3", Nil, List(List(ValDef("i", TypeIdent("Int"), EmptyTree()))), TypeIdent("Int"), Ident("i"))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f4", Nil, List(List(ValDef("i", TypeIdent("Int"), EmptyTree())), List(ValDef("j", TypeIdent("Int"), EmptyTree()))), TypeIdent("Int"), Apply(Select(Ident("i"), "+"), List(Ident("j"))))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f5", Nil, List(List(ValDef("i", TypeIdent("Int"), EmptyTree()))), TypeIdent("Int"), Ident("i")), DefDef("f5$default$1", Nil, Nil, Inferred(), Literal(Constant.Int(9)))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f6", List(TypeDef("T", TypeBoundsTree(Inferred(), Inferred()))), List(List(ValDef("x", TypeIdent("T"), EmptyTree()))), TypeIdent("T"), Ident("x"))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f7", List(TypeDef("T", TypeBoundsTree(Inferred(), Inferred()))), List(List(ValDef("x", TypeIdent("T"), EmptyTree()))), Singleton(Ident("x")), Ident("x"))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f8", Nil, List(List(ValDef("i", Annotated(Applied(Inferred(), List(TypeIdent("Int"))), Apply(Select(New(Inferred()), "<init>"), Nil)), EmptyTree()))), TypeIdent("Int"), Literal(Constant.Int(9)))), Apply(Ident("f8"), List(Typed(Repeated(List(Literal(Constant.Int(1)), Literal(Constant.Int(2)), Literal(Constant.Int(3))), Inferred()), Inferred())))))
TypeRef(TermRef(ThisType(TypeRef(NoPrefix(), "<root>")), "scala"), "Int")

Inlined(EmptyTree(), Nil, Block(List(DefDef("f9", Nil, List(List(ValDef("i", ByName(TypeIdent("Int")), EmptyTree()))), TypeIdent("Int"), Ident("i"))), Literal(Constant.Unit())))
TypeRef(ThisType(TypeRef(NoPrefix(), "scala")), "Unit")

