Normal function
{
  var i_1: scala.Int = 0
  val j_1: scala.Int = 5
  while (i_1.<(j_1)) {
    val x$1: scala.Int = i_1
    f.apply(x$1)
    i_1 = i_1.+(1)
  }
  while ({
    val x$2: scala.Int = i_1
    f.apply(x$2)
    i_1 = i_1.+(1)
    i_1.<(j_1)
  }) ()
}

By name function
{
  var i_2: scala.Int = 0
  val j_2: scala.Int = 5
  while (i_2.<(j_2)) {
    val x$3: scala.Int = i_2
    f.apply(x$3)
    i_2 = i_2.+(1)
  }
  while ({
    val x$4: scala.Int = i_2
    f.apply(x$4)
    i_2 = i_2.+(1)
    i_2.<(j_2)
  }) ()
}

Inline function
{
  var i_3: scala.Int = 0
  val j_3: scala.Int = 5
  while (i_3.<(j_3)) {
    val x$5: scala.Int = i_3
    scala.Predef.println(x$5)
    i_3 = i_3.+(1)
  }
  while ({
    val x$6: scala.Int = i_3
    scala.Predef.println(x$6)
    i_3 = i_3.+(1)
    i_3.<(j_3)
  }) ()
}
