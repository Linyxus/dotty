/** Decompiled from out/posTestFromTasty/pos/t704/C.tasty */
class C() extends E
/** Decompiled from out/posTestFromTasty/pos/t704/D.tasty */
trait D() extends java.lang.Object {
  val x: java.lang.String = "xxxx should appear twice"
  @scala.annotation.init() object xxxx {
    scala.Console.println(D.this.x)
  }
  def get_xxxx: scala.AnyRef = D.this.xxxx
}
/** Decompiled from out/posTestFromTasty/pos/t704/E.tasty */
trait E() extends java.lang.Object with D {
  def f(): scala.Unit = {
    val y: java.lang.String = "yyyy should appear twice"
    object yyyy {
      val x1: scala.AnyRef = E.this.get_xxxx
      scala.Console.println(y)
    }

    {
      yyyy
      ()
    }
  }
}
/** Decompiled from out/posTestFromTasty/pos/t704/Go.tasty */
object Go extends D {
  def main(args: scala.Array[scala.Predef.String]): scala.Unit = {
    new C().f()
    new C().f()
  }
}